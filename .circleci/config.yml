version: 2.1

orbs:
  docker: circleci/docker@2.2.0

jobs:
  build-and-test:
    docker:
      - image: cimg/base:edge
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true 
      - run:
          name: Build Docker image
          command: |
            docker build -t iwalk .
      - run:
          name: Run Docker image
          command: |
            docker run -d --name iwalk iwalk &&  docker logs iwalk && docker exec iwalk bash -c "curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2"
      - run:
          name: Install Poetry
          command: |
            docker exec iwalk bash -c "curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2"
      - run:
          name: Check Poetry
          command: |
            docker exec iwalk bash -c "poetry check -vvv"
      - run:
          name: Configure Poetry
          command: |
            docker exec iwalk bash -c "poetry config virtualenvs.create false"
      - run:
          name: Install dependencies
          command: |
            docker exec iwalk bash -c "poetry install -vvv"
      - run:
          name: Check code formatting with Black
          command: |
            docker exec iwalk bash -c "poetry run black --check ."
      - run:
          name: Lint code with Flake8
          command: |
            docker exec iwalk bash -c "poetry run flake8 --count ."
      - run:
          name: Run Pytest, report coverage
          # make test and make coverage are redundant,
          # but make coverage actually doesn't fail the build if it fails; it just reports a lower
          # coverage percentage for failing short, but "succeeds"
          command: |
            docker exec iwalk bash -c "
              make test
              make coverage
              poetry run coveralls
            "
workflows:
  main:
    jobs:
      - build-and-test
