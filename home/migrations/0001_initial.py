# Generated by Django 3.0.5 on 2020-06-24 03:04

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email which uniquely identifies an account', max_length=254, unique=True)),
                ('name', models.CharField(help_text="User's name", max_length=250)),
                ('zip', models.CharField(help_text="User's zipcode", max_length=25)),
                ('age', models.IntegerField(help_text="User's age")),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Accounts creation timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Accounts updation timestamp')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('contest_id', models.CharField(default=uuid.uuid4, help_text='Contest identifier', max_length=250, primary_key=True, serialize=False)),
                ('start_promo', models.DateField(help_text='Start date of promotion')),
                ('start', models.DateField(help_text='Contest start date')),
                ('end', models.DateField(help_text='Contest end date')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Contest creation timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Contest updation timestamp')),
            ],
            options={
                'ordering': ('-start',),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.CharField(help_text='A unique id generated by the app when it is first installed on a device. Used for authentication on subsequent calls', max_length=250, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the record was created/device was registered')),
                ('account', models.ForeignKey(help_text='User account associated with this registered device', on_delete=django.db.models.deletion.CASCADE, to='home.Account')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='IntentionalWalk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(help_text='Timestamp when the intentional walk started')),
                ('end', models.DateTimeField(help_text='Timestamp when the intentional walk ended')),
                ('steps', models.IntegerField(help_text='Number of steps recorded')),
                ('pause_time', models.FloatField(help_text='Total time paused (in seconds)')),
                ('distance', models.FloatField(help_text='Total distance covered')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('account', models.ForeignKey(help_text='Account the data is linked to', on_delete=django.db.models.deletion.CASCADE, to='home.Account')),
                ('device', models.ForeignKey(help_text='Device the data is coming from', on_delete=django.db.models.deletion.CASCADE, to='home.Device')),
            ],
            options={
                'ordering': ('-start',),
            },
        ),
        migrations.CreateModel(
            name='DailyWalk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='The specific for which the steps are recorded for')),
                ('steps', models.IntegerField(help_text='Number of steps recorded')),
                ('distance', models.FloatField(help_text='Total distance covered')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Record creation timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Record updation timestamp')),
                ('account', models.ForeignKey(help_text='Account the data is linked to', on_delete=django.db.models.deletion.CASCADE, to='home.Account')),
                ('device', models.ForeignKey(help_text='Device the data is coming from', on_delete=django.db.models.deletion.CASCADE, to='home.Device')),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.AddField(
            model_name='account',
            name='contests',
            field=models.ManyToManyField(blank=True, help_text='All the contests the account has enrolled in', to='home.Contest'),
        ),
        migrations.AddConstraint(
            model_name='dailywalk',
            constraint=models.UniqueConstraint(fields=('account', 'date'), name='account_date'),
        ),
    ]
